7883595487:AAFWw9hLgjidbzUsUVViKjZKcKU3DPNFn9Qfrom aiogram import Bot, 
Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

# üîê –¢–≤—ñ–π —Ç–æ–∫–µ–Ω
TOKEN = "7883595487:AAFuLs0SyBLJRcsKsKhAKAHOs7fu6x49wcg"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ú–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("–í—Ç/–ß—Ç 17:30"))
keyboard.add(KeyboardButton("–í—Ç/–ß—Ç 19:00"))
keyboard.add(KeyboardButton("–°–± 13:30"))
keyboard.add(KeyboardButton("–°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å"))

# –ü–∞–º‚Äô—è—Ç—å –ø—Ä–æ –∑–∞–ø–∏—Å–∞–Ω–∏—Ö
registrations = {}

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–∞–ø–∏—Å—É:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text in ["–í—Ç/–ß—Ç 17:30", "–í—Ç/–ß—Ç 19:00", "–°–± 13:30"])
async def register_user(message: types.Message):
    user_id = message.from_user.id
    session = message.text

    if session not in registrations:
        registrations[session] = []

    if user_id in registrations[session]:
        await message.answer("–¢–∏ –≤–∂–µ –∑–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ —Ü–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è!")
    elif len(registrations[session]) < 4:
        registrations[session].append(user_id)
        await message.answer(f"–¢–µ–±–µ –∑–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ {session} ‚úÖ")
    else:
        await message.answer("–ù–∞ –∂–∞–ª—å, –º—ñ—Å—Ü—å –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î üòû")

@dp.message_handler(lambda message: message.text == "–°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Å")
async def cancel_registration(message: types.Message):
    user_id = message.from_user.id
    for session, users in registrations.items():
        if user_id in users:
            users.remove(user_id)
            await message.answer(f"–¢–≤—ñ–π –∑–∞–ø–∏—Å –Ω–∞ {session} —Å–∫–∞—Å–æ–≤–∞–Ω–æ ‚ùå")
            return
    await message.answer("–¢–∏ –Ω–µ –±—É–≤ –∑–∞–ø–∏—Å–∞–Ω–∏–π –Ω—ñ –Ω–∞ —è–∫–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
